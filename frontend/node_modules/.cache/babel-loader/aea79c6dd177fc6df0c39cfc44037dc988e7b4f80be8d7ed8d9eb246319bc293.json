{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000\n});\n\n// Upload API\nexport const uploadAPI = {\n  uploadDocument: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/upload/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  getDocumentStatus: async documentId => {\n    const response = await api.get(`/upload/status/${documentId}`);\n    return response.data;\n  },\n  listDocuments: async () => {\n    const response = await api.get('/upload/list');\n    return response.data;\n  },\n  deleteDocument: async documentId => {\n    const response = await api.delete(`/upload/${documentId}`);\n    return response.data;\n  },\n  searchDocuments: async request => {\n    const response = await api.post('/upload/search', request);\n    return response.data;\n  }\n};\n\n// Configuration API\nexport const configAPI = {\n  getCurrentConfig: async () => {\n    const response = await api.get('/config/');\n    return response.data;\n  },\n  updateEmbedderConfig: async config => {\n    const response = await api.post('/config/embedder', config);\n    return response.data;\n  },\n  updateVectorDBConfig: async config => {\n    const response = await api.post('/config/vector-db', config);\n    return response.data;\n  },\n  updateCompleteConfig: async config => {\n    const response = await api.post('/config/complete', config);\n    return response.data;\n  },\n  checkServiceHealth: async () => {\n    const response = await api.get('/config/health');\n    return response.data;\n  },\n  resetConfiguration: async () => {\n    const response = await api.delete('/config/reset');\n    return response.data;\n  }\n};\n\n// General API\nexport const generalAPI = {\n  getAppInfo: async () => {\n    const response = await api.get('/');\n    return response.data;\n  },\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","uploadAPI","uploadDocument","file","formData","FormData","append","response","post","headers","data","getDocumentStatus","documentId","get","listDocuments","deleteDocument","delete","searchDocuments","request","configAPI","getCurrentConfig","updateEmbedderConfig","config","updateVectorDBConfig","updateCompleteConfig","checkServiceHealth","resetConfiguration","generalAPI","getAppInfo","healthCheck"],"sources":["D:/IDTSolutions/Ai/Embedder/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  Document,\r\n  DocumentUploadResponse,\r\n  DocumentProcessingStatus,\r\n  SearchRequest,\r\n  SearchResponse,\r\n  EmbedderConfig,\r\n  VectorDBConfig,\r\n  AppConfig,\r\n  HealthStatus\r\n} from '../types/api';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n});\r\n\r\n// Upload API\r\nexport const uploadAPI = {\r\n  uploadDocument: async (file: File): Promise<DocumentUploadResponse> => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    const response = await api.post<DocumentUploadResponse>('/upload/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getDocumentStatus: async (documentId: string): Promise<DocumentProcessingStatus> => {\r\n    const response = await api.get<DocumentProcessingStatus>(`/upload/status/${documentId}`);\r\n    return response.data;\r\n  },\r\n\r\n  listDocuments: async (): Promise<{ documents: Document[]; total: number }> => {\r\n    const response = await api.get('/upload/list');\r\n    return response.data;\r\n  },\r\n\r\n  deleteDocument: async (documentId: string): Promise<{ message: string }> => {\r\n    const response = await api.delete(`/upload/${documentId}`);\r\n    return response.data;\r\n  },\r\n\r\n  searchDocuments: async (request: SearchRequest): Promise<SearchResponse> => {\r\n    const response = await api.post<SearchResponse>('/upload/search', request);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Configuration API\r\nexport const configAPI = {\r\n  getCurrentConfig: async (): Promise<{ configured: boolean; config?: AppConfig }> => {\r\n    const response = await api.get('/config/');\r\n    return response.data;\r\n  },\r\n\r\n  updateEmbedderConfig: async (config: EmbedderConfig): Promise<{ message: string; embedder_info: any }> => {\r\n    const response = await api.post('/config/embedder', config);\r\n    return response.data;\r\n  },\r\n\r\n  updateVectorDBConfig: async (config: VectorDBConfig): Promise<{ message: string; stats: any }> => {\r\n    const response = await api.post('/config/vector-db', config);\r\n    return response.data;\r\n  },\r\n\r\n  updateCompleteConfig: async (config: AppConfig): Promise<{ message: string; embedder_info: any; vector_db_stats: any }> => {\r\n    const response = await api.post('/config/complete', config);\r\n    return response.data;\r\n  },\r\n\r\n  checkServiceHealth: async (): Promise<HealthStatus> => {\r\n    const response = await api.get<HealthStatus>('/config/health');\r\n    return response.data;\r\n  },\r\n\r\n  resetConfiguration: async (): Promise<{ message: string }> => {\r\n    const response = await api.delete('/config/reset');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// General API\r\nexport const generalAPI = {\r\n  getAppInfo: async (): Promise<any> => {\r\n    const response = await api.get('/');\r\n    return response.data;\r\n  },\r\n\r\n  healthCheck: async (): Promise<{ status: string; configured: boolean }> => {\r\n    const response = await api.get('/health');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}